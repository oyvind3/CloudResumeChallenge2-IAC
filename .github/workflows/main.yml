# This is a basic workflow to help you get started with Actions

name: CI
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
env:
  resourcegroupname: rgiacoyvind
  bicepfilePath: ./function.bicep
  deployname: oyvindtestiacdeploy
  outputFilePath: ./main.json
  AZURE_FUNCTIONAPP_NAME: 'oyvindfunction180123'
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'
  PYTHON_VERSION: '3.9'

jobs:
  prebuild-azure-enviroment:
    runs-on: ubuntu-latest
    steps:
      - name: test login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create rg
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az account set --subscription ${{secrets.AZURE_SUBSCRIPTION }}
            az group create -l westeurope -n ${{ env.resourcegroupname }}

  build-azure-enviroment:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [prebuild-azure-enviroment]
    steps:
      - uses: actions/checkout@main
      - name: bicepbuild
        uses: Azure/bicep-build-action@v1.0.1
        with:
          bicepFilePath: ${{env.bicepfilePath}}
          outputFilePath: ${{ env.outputFilePath }}

      - name: loginazureðŸ§¿
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to rg
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{env.resourcegroupname}}
          template: ${{env.outputFilePath}}
          failOnStdErr: false

      # Runs a single command using the runners shell
      - name: added waiting time
        uses: azure/powershell@v1
        with:
         inlineScript: |
          start-sleep -Seconds 160
         azPSVersion: "latest"

  Function-deployment:
    runs-on: ubuntu-latest
    needs: [build-azure-enviroment]
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3

    # If you want to use Azure RBAC instead of Publish Profile, then uncomment the task below
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }} # set up AZURE_RBAC_CREDENTIALS secrets in your repository

    - name: Setup Python ${{ env.PYTHON_VERSION }} Environment
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: 'Resolve Project Dependencies Using Pip'
      shell: bash
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        python -m pip install --upgrade pip
        pip install -r requirements.txt --target=".python_packages/lib/site-packages"
        popd

    - name: 'Run Azure Functions Actionâš¡'
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }} 
        scm-do-build-during-deployment: true
        enable-oryx-build: true


